ARG BASE=ubuntu:bionic
FROM ${BASE}
ARG DEBIAN_FRONTEND=noninteractive

ENV TZ=Europe/Rome
WORKDIR /tmp
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone \
   && apt-get update && apt-get install -y --no-install-recommends \
      autoconf autoconf-archive automake bison bzip2 ca-certificates ccache \
      curl doxygen flex g++ g++-multilib gcc gcc-multilib ghostscript git \
      graphviz libbdd-dev libc6-dev-i386 libfl-dev libglpk-dev libicu-dev \
      libltdl-dev liblzma-dev libmpc-dev libmpfi-dev libmpfr-dev \
      libsuitesparse-dev libtinfo5 libtool libxml2-dev linux-libc-dev locales \
      lsb-release make pkg-config rsync texlive-fonts-recommended \
      texlive-latex-extra texlive-latex-recommended time wget xz-utils zlib1g-dev \
   && rm -rf /var/lib/apt/lists/* \
   && update-ca-certificates \
   && locale-gen en_US.UTF-8 \
   # Install CMake from source
   && git clone --depth 1 --branch v3.26.3 https://gitlab.kitware.com/cmake/cmake.git cmake \
   && cd cmake \
   && ./bootstrap --parallel=4 -- -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_USE_OPENSSL=OFF \
   && make -j4 \
   && make install \
   && cd .. \
   && rm -rf cmake \
   # Install AppImage tools
   && wget "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage" \
   && chmod +x appimagetool-x86_64.AppImage \
   && ./appimagetool-x86_64.AppImage --appimage-extract \
   && mv squashfs-root /opt/appimage-tool.AppDir \
   && ln -sf /opt/appimage-tool.AppDir/AppRun /usr/bin/appimagetool \
   && rm -f appimagetool-x86_64.AppImage \
   # Install patch for appimage tool inside docker
   && wget https://github.com/NixOS/patchelf/releases/download/0.18.0/patchelf-0.18.0-x86_64.tar.gz -qO- | tar xz -C /usr/ \
   # Built and install boost libraries
   && wget https://github.com/boostorg/boost/releases/download/boost-1.82.0/boost-1.82.0.tar.xz -qO- | tar xJ \
   && cd boost-1.82.0 \
   && ./bootstrap.sh --with-libraries=headers --prefix=/usr \
   && ./b2 release install \
   && cd .. \
   && rm -rf boost*

WORKDIR /
CMD [ "/bin/bash" ]
