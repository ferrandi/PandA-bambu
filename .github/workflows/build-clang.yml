name: Build Clang

on:
  workflow_dispatch:
    inputs:
      clang_ref:
        description: "Clang branch reference to compile (e.g.: release/16.x)"
        required: true
      version:
        description: "Compiled Clang version number (e.g.: 16)"
        required: true
      configure:
        description: "Clang configuration options"
        required: false
        default: "-DLLVM_ENABLE_PROJECTS="clang;mlir;polly" -DCMAKE_BUILD_TYPE=Release -DLLVM_PARALLEL_LINK_JOBS=4  -DLLVM_ENABLE_ASSERTIONS=ON"

concurrency:
  group: build-clang-${{ inputs.version }}
  cancel-in-progress: true

env:
  storage-url: ${{secrets.CI_STORAGE_URL}}
  storage-user: ${{secrets.CI_STORAGE_USER}}
  storage-token: ${{secrets.CI_STORAGE_TOKEN}}
  storage-path: compilers
  host_jobs: $J

jobs:
  build:
    runs-on: [self-hosted]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Env setup
        id: host
        shell: bash
        run: |
          echo "Current host supports ${{env.host_jobs}} parallel jobs"
          echo "jobs=${{env.host_jobs}}" >> $GITHUB_OUTPUT
      - name: Build Clang-${{inputs.version}}
        id: build
        uses: ./.github/actions/build-clang
        with:
          jobs: ${{steps.host.outputs.jobs}}
          branch: ${{inputs.clang_ref}}
          dist-name: clang-${{inputs.version}}-bambu
          config-args: ${{ inputs.configure }}
      - name: Upload clang-${{inputs.version}} dist directory
        uses: ./.github/actions/storage-upload
        with:
          path: ${{steps.build.outputs.dist-dir}}/.
          storage-url: "${{env.storage-url}}"
          storage-path: "${{env.storage-path}}"
          username: "${{env.storage-user}}"
          password: "${{env.storage-token}}"
