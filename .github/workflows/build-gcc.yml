name: Build GCC

on:
  workflow_dispatch:
    inputs:
      gcc_ref:
        description: "GCC branch reference to compile (e.g.: releases/gcc-5)"
        required: true
      version:
        description: "Compiled GCC version number (e.g.: 5)"
        required: true
      configure:
        description: "GCC configuration options"
        required: false
        default: "--enable-languages=c,c++,fortran --prefix=/usr --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu"
      patch:
        description: "Patch to be applied (if necessary)"
        required: false
        default: ""

concurrency:
  group: build-gcc-${{ inputs.version }}
  cancel-in-progress: true

env:
  storage-url: ${{secrets.CI_STORAGE_URL}}
  storage-user: ${{secrets.CI_STORAGE_USER}}
  storage-token: ${{secrets.CI_STORAGE_TOKEN}}
  storage-path: compilers
  host_jobs: $J

jobs:
  build:
    runs-on: [self-hosted]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Env setup
        id: host
        shell: bash
        run: |
          echo "Current host supports ${{env.host_jobs}} parallel jobs"
          echo "jobs=${{env.host_jobs}}" >> $GITHUB_OUTPUT
      - name: Set patch
        if: ${{ inputs.patch != '' }}
        shell: bash
        run: |
          cp '.github/actions/build-gcc/${{inputs.patch}}' '${{github.workspace}}'
      - name: Build GCC-${{inputs.version}}
        id: build
        uses: ./.github/actions/build-gcc
        with:
          jobs: ${{steps.host.outputs.jobs}}
          branch: ${{inputs.gcc_ref}}
          dist-name: gcc-${{inputs.version}}-bambu
          config-args: -v --with-pkgversion="Ubuntu gcc-${{inputs.version}}-bambu" --with-bugurl="file:///usr/share/doc/gcc-${{inputs.version}}/README.Bugs" --program-suffix=-${{inputs.version}} ${{ inputs.configure }}
      - name: Upload GCC-${{inputs.version}} dist directory
        uses: ./.github/actions/storage-upload
        with:
          path: ${{steps.build.outputs.dist-dir}}/.
          storage-url: "${{env.storage-url}}"
          storage-path: "${{env.storage-path}}"
          username: "${{env.storage-user}}"
          password: "${{env.storage-token}}"
