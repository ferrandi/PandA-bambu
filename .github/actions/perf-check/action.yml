name: Performance check
description: Check performance against main branch results
inputs:
  test-id:
    description: "Test id"
    required: true
  new-results:
    description: "New csv results file name"
    required: true
  datapoints:
    description: "Datapoints to compare"
    required: false
    default: "CYCLES"
  score:
    description: "Socre multiplier for each datapoint"
    required: false
    default: ""
  storage-url:
    description: "Url of private storage"
    required: true
  username:
    description: "Username for private storage access"
    required: false
    default: ""
  password:
    description: "Password for private storage access"
    required: false
    default: ""
outputs:
  compare-csv:
    description: "Compare output csv file"
    value: ${{ steps.cmp.outputs.outcsv }}
runs:
  using: "composite"
  steps:
    - name: Upload test results from current branch
      shell: bash
      run: |
        set -e
        PKG_URL="${{inputs.storage-url}}/results/${{github.head_ref}}/${{inputs.test-id}}.csv"
        CURL_CMD=""
        if [[ ! -z '${{inputs.username}}' ]]; then
          CURL_CMD+='-u ${{inputs.username}}:${{inputs.password}} '
        fi
        if [[ -f "${{inputs.new-results}}" ]]; then
          curl -s -L --fail $CURL_CMD -T "${{inputs.new-results}}" "$PKG_URL"
          echo "Package successfully uploaded to $PKG_URL"
        else
          echo "Path '${{inputs.new-results}}' does not name a file or directory"
          exit -1;
        fi
    - name: Compare against main
      id: cmp
      shell: bash
      run: |
        set -e
        PKG_URL="${{inputs.storage-url}}/results/main/${{inputs.test-id}}.csv"
        COMMIT_SHA="${{github.sha}}"
        COMPARE_CSV="${{inputs.test-id}}.$(echo '${{github.head_ref}}' | sed 's/\//_/g')_${COMMIT_SHA:0:7}.csv"
        score=""
        outcsv=""
        CURL_CMD=""
        if [[ ! -z '${{inputs.username}}' ]]; then
          CURL_CMD+='-u ${{inputs.username}}:${{inputs.password}} '
        fi
        mkdir -p main-reports
        if curl -s -L --fail $CURL_CMD $PKG_URL -o main-reports/${{inputs.test-id}}.csv; then
          if [[ ! -z "${{ inputs.score }}" ]]; then
            score="-s ${{ inputs.score }}"
          fi
          
          worse_count=$(python ./etc/scripts/perf_diff.py -d ${{inputs.datapoints}} $score -o $COMPARE_CSV "main-reports/${{inputs.test-id}}.csv" "${{inputs.new-results}}" 3>&2 2>&1 1>&3)
          if [[ "$worse_count" == "-1" ]]; then
            echo "::warning:: Benchmark suite is different from main"
          elif [[ "$worse_count" != "0" ]]; then
            outcsv="$COMPARE_CSV"
            echo "::warning:: Performance are worse than main for ${{inputs.test-id}}: $worse_count benchmarks have degraded performance"
          fi
        else
          echo "::warning:: No previous benchmark result found to compare"
        fi
        echo "outcsv=$outcsv" >> $GITHUB_OUTPUT
        exit 0
