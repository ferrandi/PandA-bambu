/*
 *
 *                   _/_/_/    _/_/   _/    _/ _/_/_/    _/_/
 *                  _/   _/ _/    _/ _/_/  _/ _/   _/ _/    _/
 *                 _/_/_/  _/_/_/_/ _/  _/_/ _/   _/ _/_/_/_/
 *                _/      _/    _/ _/    _/ _/   _/ _/    _/
 *               _/      _/    _/ _/    _/ _/_/_/  _/    _/
 *
 *             ***********************************************
 *                              PandA Project 
 *                     URL: http://panda.dei.polimi.it
 *                       Politecnico di Milano - DEIB
 *                        System Architectures Group
 *             ***********************************************
 *              Copyright (c) 2004-2023 Politecnico di Milano
 *
 *   This file is part of the PandA framework.
 *
 *   The PandA framework is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
*/
/*!
  \page tools_overview PandA Tools and Libraries
 
  \section src_intro Introduction
  The PandA project contains the the set of tools and libraries reported below.


  \section src_tools Tools
  The tools that can be configured and so enabled are:
    - \ref bambu_overview provides high-level synthesis functionalities
    - \ref eucalyptus_overview allows the characterization of resources in the technology library


  \section src_subprojects Libraries sub-projects 
  Creation and dumping of intermediate representation:
  - Subproject \ref src_parser_page "Parsers:" provides all the available parsers, adopted to acquire the data that the tools use as input to their algorithms.
  - Subproject \ref src_graph_page "Graph:" contains the definition of the graph-based descriptions.
  - Subproject \ref src_polixml_page "POLIXML:" contains the definition of a simple and easy-to-use XML library.
  - Subproject \ref src_behavior_page "Behavior:" contains functions to manage and to represent graphs with different granularity. In particular we can represent CFG/DFG/CDG/DDG/SDG for operations and CFG/DFG/Dom/PostDom for basic blocks.
  - Subproject \ref src_tree_page provides "Tree:" functions to manage and to represent the tree computed by the GCC compilation.
  - Subproject \ref src_frontend_page "Frontend:" contains the algorithms adopted to build the entire intermediate representation (both tree and graph-based).
  - Subproject \ref src_backend_page "Parsers:" it provides backend functions to C, SystemC, VHDL, and Verilog descriptions.

  Resource library and circuit representation management:
  - Subproject \ref src_technology_manager_page "Technology:" provides functions to manage and to represent technology information.
  - Subproject \ref src_circuit_page "Circuit:" describes a generic data structure representing a circuit.
  - Subproject \ref src_wrapper_page "Wrappers:" it provides classes to wrap commercial synthesis tools.

  Bambu tool:
  - Subproject \ref src_HLS_page provides algorithms for high-level synthesis.

  Development aids: 
  - Subproject \ref src_algorithms_page contains a set of useful algorithms that can be used to aid problem solution into development.
  - Subproject \ref src_ilp_page provides utilities used to solve ILP formulations. 
  - Subproject \ref src_utility_page contains some useful macros and functions.


*/
