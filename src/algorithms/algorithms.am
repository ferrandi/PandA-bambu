noinst_LTLIBRARIES += lib_algorithms.la 
lib_algorithms_la_LIBADD = 
lib_algorithms_la_SOURCES =

noinst_HEADERS += algorithms/graph_helpers/cyclic_topological_sort.hpp

if BUILD_LIB_CLIQUECOVER
  noinst_LTLIBRARIES +=  lib_clique_covering.la
  
  lib_clique_covering_la_CPPFLAGS = \
   -I$(top_srcdir)/src/ \
   -isystem $(top_srcdir)/ext/or-tools \
   -I$(top_srcdir)/src/algorithms/clique_covering \
   -I$(top_srcdir)/src/utility \
   $(AM_CPPFLAGS)

  noinst_HEADERS += \
    algorithms/clique_covering/check_clique.hpp \
    algorithms/clique_covering/clique_covering.hpp \
    algorithms/clique_covering/clique_covering_graph.hpp \
    algorithms/clique_covering/degree_coloring.hpp \
    algorithms/clique_covering/dsatur2_coloring.hpp \
    algorithms/clique_covering/dsatur_coloring.hpp \
    algorithms/clique_covering/filter_clique.hpp \
    algorithms/clique_covering/maxclique_dsatur_coloring.hpp

  lib_clique_covering_la_SOURCES = algorithms/clique_covering/clique_covering.cpp

  EXTRA_DIST += \
    algorithms/clique_covering/test_degree_coloring.cpp \
    algorithms/clique_covering/test_dsatur2_coloring.cpp \
    algorithms/clique_covering/test_dsatur_coloring.cpp \
    algorithms/clique_covering/test_maxclique_dsatur_coloring.cpp
  
  lib_algorithms_la_LIBADD += lib_clique_covering.la
endif

if BUILD_LIB_DOMINANCE
  noinst_LTLIBRARIES += lib_dominance.la

  noinst_HEADERS += \
    algorithms/dominance/Dominance.hpp \
    algorithms/dominance/weak_dominance.hpp

  lib_dominance_la_CPPFLAGS = \
   -I$(top_srcdir)/src/ \
   -I$(top_srcdir)/src/algorithms/dominance \
   -I$(top_srcdir)/src/graph \
   -I$(top_srcdir)/src/utility \
   $(AM_CPPFLAGS)

  lib_dominance_la_SOURCES = algorithms/dominance/weak_dominance.cpp

  lib_algorithms_la_LIBADD += lib_dominance.la
endif

if BUILD_LIB_LOOPS
  noinst_LTLIBRARIES += lib_loops_detection.la

  noinst_HEADERS += \
    algorithms/loops_detection/loops.hpp \
    algorithms/loops_detection/loop.hpp

  lib_loops_detection_la_CPPFLAGS = \
   -I$(top_srcdir)/src/ \
   -I$(top_srcdir)/src/algorithms/dominance \
   -I$(top_srcdir)/src/algorithms/loops_detection \
   -I$(top_srcdir)/src/behavior \
   -I$(top_srcdir)/src/graph \
   -I$(top_srcdir)/src/tree \
   -I$(top_srcdir)/src/utility \
   $(AM_CPPFLAGS)

  lib_loops_detection_la_SOURCES = \
    algorithms/loops_detection/loops.cpp \
    algorithms/loops_detection/loop.cpp

  lib_algorithms_la_LIBADD += lib_loops_detection.la
endif

if BUILD_LIB_RANGE_ANALYSIS
  noinst_LTLIBRARIES += lib_range_analysis.la

  noinst_HEADERS += \
    algorithms/range_analysis/BinaryOpNode.hpp \
    algorithms/range_analysis/ConditionalValueRange.hpp \
    algorithms/range_analysis/LoadOpNode.hpp \
    algorithms/range_analysis/NodeContainer.hpp \
    algorithms/range_analysis/OpNode.hpp \
    algorithms/range_analysis/PhiOpNode.hpp \
    algorithms/range_analysis/SigmaOpNode.hpp \
    algorithms/range_analysis/SymbValueRange.hpp \
    algorithms/range_analysis/TernaryOpNode.hpp \
    algorithms/range_analysis/UnaryOpNode.hpp \
    algorithms/range_analysis/ValueRange.hpp \
    algorithms/range_analysis/VarNode.hpp \
    algorithms/range_analysis/range_analysis_helper.hpp

  lib_range_analysis_la_CPPFLAGS = \
   -I$(top_srcdir)/src/HLS \
   -I$(top_srcdir)/src/HLS/memory \
   -I$(top_srcdir)/src/ \
   -I$(top_srcdir)/src/algorithms/dominance \
   -I$(top_srcdir)/src/algorithms/range_analysis \
   -I$(top_srcdir)/src/behavior \
   -I$(top_srcdir)/src/graph \
   -I$(top_srcdir)/src/tree \
   -I$(top_srcdir)/src/utility \
   $(AM_CPPFLAGS)

  lib_range_analysis_la_SOURCES = \
    algorithms/range_analysis/BinaryOpNode.cpp \
    algorithms/range_analysis/ConditionalValueRange.cpp \
    algorithms/range_analysis/LoadOpNode.cpp \
    algorithms/range_analysis/NodeContainer.cpp \
    algorithms/range_analysis/OpNode.cpp \
    algorithms/range_analysis/PhiOpNode.cpp \
    algorithms/range_analysis/SigmaOpNode.cpp \
    algorithms/range_analysis/SymbValueRange.cpp \
    algorithms/range_analysis/TernaryOpNode.cpp \
    algorithms/range_analysis/UnaryOpNode.cpp \
    algorithms/range_analysis/ValueRange.cpp \
    algorithms/range_analysis/VarNode.cpp \
    algorithms/range_analysis/range_analysis_helper.cpp

  lib_algorithms_la_LIBADD += lib_range_analysis.la
endif
